// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: views.sql

package db

import (
	"context"
)

const groupBalances = `-- name: GroupBalances :many
SELECT gb.user_name, gb.balance
FROM group_balances gb
WHERE gb.group_id = $1
ORDER BY gb.user_name
`

type GroupBalancesRow struct {
	UserName string `json:"user_name"`
	Balance  int32  `json:"balance"`
}

func (q *Queries) GroupBalances(ctx context.Context, groupID int64) ([]GroupBalancesRow, error) {
	rows, err := q.db.Query(ctx, groupBalances, groupID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GroupBalancesRow{}
	for rows.Next() {
		var i GroupBalancesRow
		if err := rows.Scan(&i.UserName, &i.Balance); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
